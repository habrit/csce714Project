session cpu_regress
{
	top_dir : $ENV(PWD)/regression/ ;
	pre_session_script : <text> echo "pre_session_script" </text>;
};


group all_test {

      run_script: "cd $ENV(PWD) ; irun -f run_vm.f +UVM_TESTNAME=ex_to_invalid" ;
      scan_script: "vm_scan.pl ius.flt shell.flt" ;
      count : 1;
      pre_commands: "";
      timeout: 13000000;
      sv_seed: 1;

      run_script: "cd $ENV(PWD) ; irun -f run_vm.f +UVM_TESTNAME=ex_to_mod" ;
      scan_script: "vm_scan.pl ius.flt shell.flt" ;
      count : 1;
      pre_commands: "";
      timeout: 13000000;
      sv_seed: 1;

      run_script: "cd $ENV(PWD) ; irun -f run_vm.f +UVM_TESTNAME=ex_to_shared" ;
      scan_script: "vm_scan.pl ius.flt shell.flt" ;
      count : 1;
      pre_commands: "";
      timeout: 13000000;
      sv_seed: 1;

      run_script: "cd $ENV(PWD) ; irun -f run_vm.f +UVM_TESTNAME=fsm_exclusive_to_others" ;
      scan_script: "vm_scan.pl ius.flt shell.flt" ;
      count : 1;
      pre_commands: "";
      timeout: 13000000;
      sv_seed: 1;

      run_script: "cd $ENV(PWD) ; irun -f run_vm.f +UVM_TESTNAME=illegalwrite" ;
      scan_script: "vm_scan.pl ius.flt shell.flt" ;
      count : 1;
      pre_commands: "";
      timeout: 13000000;
      sv_seed: 1;

      run_script: "cd $ENV(PWD) ; irun -f run_vm.f +UVM_TESTNAME=mesi_test" ;
      scan_script: "vm_scan.pl ius.flt shell.flt" ;
      count : 1;
      pre_commands: "";
      timeout: 13000000;
      sv_seed: 1;

      run_script: "cd $ENV(PWD) ; irun -f run_vm.f +UVM_TESTNAME=multi_proc_rd_wr_rd" ;
      scan_script: "vm_scan.pl ius.flt shell.flt" ;
      count : 1;
      pre_commands: "";
      timeout: 13000000;
      sv_seed: 1;

      run_script: "cd $ENV(PWD) ; irun -f run_vm.f +UVM_TESTNAME=random_write" ;
      scan_script: "vm_scan.pl ius.flt shell.flt" ;
      count : 1;
      pre_commands: "";
      timeout: 13000000;
      sv_seed: 1;

      run_script: "cd $ENV(PWD) ; irun -f run_vm.f +UVM_TESTNAME=read_hit_dcache" ;
      scan_script: "vm_scan.pl ius.flt shell.flt" ;
      count : 1;
      pre_commands: "";
      timeout: 13000000;
      sv_seed: 1;

      run_script: "cd $ENV(PWD) ; irun -f run_vm.f +UVM_TESTNAME=read_hit_lv2" ;
      scan_script: "vm_scan.pl ius.flt shell.flt" ;
      count : 1;
      pre_commands: "";
      timeout: 13000000;
      sv_seed: 1;

      run_script: "cd $ENV(PWD) ; irun -f run_vm.f +UVM_TESTNAME=read_miss_cp_modified" ;
      scan_script: "vm_scan.pl ius.flt shell.flt" ;
      count : 1;
      pre_commands: "";
      timeout: 13000000;
      sv_seed: 1;

      run_script: "cd $ENV(PWD) ; irun -f run_vm.f +UVM_TESTNAME=read_miss_icache" ;
      scan_script: "vm_scan.pl ius.flt shell.flt" ;
      count : 1;
      pre_commands: "";
      timeout: 13000000;
      sv_seed: 1;

      run_script: "cd $ENV(PWD) ; irun -f run_vm.f +UVM_TESTNAME=read_miss_icache5" ;
      scan_script: "vm_scan.pl ius.flt shell.flt" ;
      count : 1;
      pre_commands: "";
      timeout: 13000000;
      sv_seed: 1;

      run_script: "cd $ENV(PWD) ; irun -f run_vm.f +UVM_TESTNAME=read_two_procs_force_write" ;
      scan_script: "vm_scan.pl ius.flt shell.flt" ;
      count : 1;
      pre_commands: "";
      timeout: 13000000;
      sv_seed: 1;

      run_script: "cd $ENV(PWD) ; irun -f run_vm.f +UVM_TESTNAME=read_write_same_proc" ;
      scan_script: "vm_scan.pl ius.flt shell.flt" ;
      count : 1;
      pre_commands: "";
      timeout: 13000000;
      sv_seed: 1;

      run_script: "cd $ENV(PWD) ; irun -f run_vm.f +UVM_TESTNAME=shared_to_invalid" ;
      scan_script: "vm_scan.pl ius.flt shell.flt" ;
      count : 1;
      pre_commands: "";
      timeout: 13000000;
      sv_seed: 1;

      run_script: "cd $ENV(PWD) ; irun -f run_vm.f +UVM_TESTNAME=write_hit_dcache_ex" ;
      scan_script: "vm_scan.pl ius.flt shell.flt" ;
      count : 1;
      pre_commands: "";
      timeout: 13000000;
      sv_seed: 1;

      run_script: "cd $ENV(PWD) ; irun -f run_vm.f +UVM_TESTNAME=write_hit_dcache_shared" ;
      scan_script: "vm_scan.pl ius.flt shell.flt" ;
      count : 1;
      pre_commands: "";
      timeout: 13000000;
      sv_seed: 1;

      run_script: "cd $ENV(PWD) ; irun -f run_vm.f +UVM_TESTNAME=write_hit_lv2" ;
      scan_script: "vm_scan.pl ius.flt shell.flt" ;
      count : 1;
      pre_commands: "";
      timeout: 13000000;
      sv_seed: 1;

      run_script: "cd $ENV(PWD) ; irun -f run_vm.f +UVM_TESTNAME=write_miss" ;
      scan_script: "vm_scan.pl ius.flt shell.flt" ;
      count : 1;
      pre_commands: "";
      timeout: 13000000;
      sv_seed: 1;

      run_script: "cd $ENV(PWD) ; irun -f run_vm.f +UVM_TESTNAME=write_miss_cp_cache" ;
      scan_script: "vm_scan.pl ius.flt shell.flt" ;
      count : 1;
      pre_commands: "";
      timeout: 13000000;
      sv_seed: 1;

      run_script: "cd $ENV(PWD) ; irun -f run_vm.f +UVM_TESTNAME=write_miss_replacement" ;
      scan_script: "vm_scan.pl ius.flt shell.flt" ;
      count : 1;
      pre_commands: "";
      timeout: 13000000;
      sv_seed: 1;

      run_script: "cd $ENV(PWD) ; irun -f run_vm.f +UVM_TESTNAME=write_miss_replacement_shared" ;
      scan_script: "vm_scan.pl ius.flt shell.flt" ;
      count : 1;
      pre_commands: "";
      timeout: 13000000;
      sv_seed: 1;

      test ex_to_invalid{
      	   run_script: "cd $ENV(PWD) ; irun -f run_vm.f +UVM_TESTNAME=ex_to_invalid -define ex_to_invalid" ;
           scan_script: "vm_scan.pl ius.flt shell.flt" ;
	   count : 1;
      };

      test ex_to_mod{
      	   run_script: "cd $ENV(PWD) ; irun -f run_vm.f +UVM_TESTNAME=ex_to_mod -define ex_to_mod" ;
           scan_script: "vm_scan.pl ius.flt shell.flt" ;
	   count : 1;
      };

      test ex_to_shared{
      	   run_script: "cd $ENV(PWD) ; irun -f run_vm.f +UVM_TESTNAME=ex_to_shared -define ex_to_shared" ;
           scan_script: "vm_scan.pl ius.flt shell.flt" ;
	   count : 1;
      };

      test fsm_exclusive_to_others{
      	   run_script: "cd $ENV(PWD) ; irun -f run_vm.f +UVM_TESTNAME=fsm_exclusive_to_others -define fsm_exclusive_to_others" ;
           scan_script: "vm_scan.pl ius.flt shell.flt" ;
	   count : 1;
      };

      test illegalwrite{
      	   run_script: "cd $ENV(PWD) ; irun -f run_vm.f +UVM_TESTNAME=illegalwrite -define illegalwrite" ;
           scan_script: "vm_scan.pl ius.flt shell.flt" ;
	   count : 1;
      };

      test mesi_test{
      	   run_script: "cd $ENV(PWD) ; irun -f run_vm.f +UVM_TESTNAME=mesi_test -define mesi_test" ;
           scan_script: "vm_scan.pl ius.flt shell.flt" ;
	   count : 1;
      };

      test multi_proc_rd_wr_rd{
      	   run_script: "cd $ENV(PWD) ; irun -f run_vm.f +UVM_TESTNAME=multi_proc_rd_wr_rd -define multi_proc_rd_wr_rd" ;
           scan_script: "vm_scan.pl ius.flt shell.flt" ;
	   count : 1;
      };

      test random_write{
      	   run_script: "cd $ENV(PWD) ; irun -f run_vm.f +UVM_TESTNAME=random_write -define random_write" ;
           scan_script: "vm_scan.pl ius.flt shell.flt" ;
	   count : 1;
      };

      test read_hit_dcache{
      	   run_script: "cd $ENV(PWD) ; irun -f run_vm.f +UVM_TESTNAME=read_hit_dcache -define read_hit_dcache" ;
           scan_script: "vm_scan.pl ius.flt shell.flt" ;
	   count : 1;
      };

      test read_hit_lv2{
      	   run_script: "cd $ENV(PWD) ; irun -f run_vm.f +UVM_TESTNAME=read_hit_lv2 -define read_hit_lv2" ;
           scan_script: "vm_scan.pl ius.flt shell.flt" ;
	   count : 1;
      };

      test read_miss_cp_modified{
      	   run_script: "cd $ENV(PWD) ; irun -f run_vm.f +UVM_TESTNAME=read_miss_cp_modified -define read_miss_cp_modified" ;
           scan_script: "vm_scan.pl ius.flt shell.flt" ;
	   count : 1;
      };

      test read_miss_icache{
      	   run_script: "cd $ENV(PWD) ; irun -f run_vm.f +UVM_TESTNAME=read_miss_icache -define read_miss_icache" ;
           scan_script: "vm_scan.pl ius.flt shell.flt" ;
	   count : 1;
      };

      test read_miss_icache5{
      	   run_script: "cd $ENV(PWD) ; irun -f run_vm.f +UVM_TESTNAME=read_miss_icache5 -define read_miss_icache5" ;
           scan_script: "vm_scan.pl ius.flt shell.flt" ;
	   count : 1;
      };

      test read_two_procs_force_write{
      	   run_script: "cd $ENV(PWD) ; irun -f run_vm.f +UVM_TESTNAME=read_two_procs_force_write -define read_two_procs_force_write" ;
           scan_script: "vm_scan.pl ius.flt shell.flt" ;
	   count : 1;
      };

      test read_write_same_proc{
      	   run_script: "cd $ENV(PWD) ; irun -f run_vm.f +UVM_TESTNAME=read_write_same_proc -define read_write_same_proc" ;
           scan_script: "vm_scan.pl ius.flt shell.flt" ;
	   count : 1;
      };

      test shared_to_invalid{
      	   run_script: "cd $ENV(PWD) ; irun -f run_vm.f +UVM_TESTNAME=shared_to_invalid -define shared_to_invalid" ;
           scan_script: "vm_scan.pl ius.flt shell.flt" ;
	   count : 1;
      };

      test write_hit_dcache_ex{
      	   run_script: "cd $ENV(PWD) ; irun -f run_vm.f +UVM_TESTNAME=write_hit_dcache_exd -define write_hit_dcache_ex" ;
           scan_script: "vm_scan.pl ius.flt shell.flt" ;
	   count : 1;
      };

      test write_hit_dcache_shared{
      	   run_script: "cd $ENV(PWD) ; irun -f run_vm.f +UVM_TESTNAME=write_hit_dcache_shared -define write_hit_dcache_shared" ;
           scan_script: "vm_scan.pl ius.flt shell.flt" ;
	   count : 1;
      };

      test write_hit_lv2{
      	   run_script: "cd $ENV(PWD) ; irun -f run_vm.f +UVM_TESTNAME=write_hit_lv2 -define write_hit_lv2" ;
           scan_script: "vm_scan.pl ius.flt shell.flt" ;
	   count : 1;
      };

      test write_miss{
      	   run_script: "cd $ENV(PWD) ; irun -f run_vm.f +UVM_TESTNAME=write_miss -define write_miss" ;
           scan_script: "vm_scan.pl ius.flt shell.flt" ;
	   count : 1;
      };

      test write_miss_cp_cache{
      	   run_script: "cd $ENV(PWD) ; irun -f run_vm.f +UVM_TESTNAME=write_miss_cp_cache -define write_miss_cp_cache" ;
           scan_script: "vm_scan.pl ius.flt shell.flt" ;
	   count : 1;
      };

      test write_miss_replacement{
      	   run_script: "cd $ENV(PWD) ; irun -f run_vm.f +UVM_TESTNAME=write_miss_replacement -define write_miss_replacement" ;
           scan_script: "vm_scan.pl ius.flt shell.flt" ;
	   count : 1;
      };

      test write_miss_replacement_shared{
      	   run_script: "cd $ENV(PWD) ; irun -f run_vm.f +UVM_TESTNAME=write_miss_replacement_shared -define write_miss_replacement_shared" ;
           scan_script: "vm_scan.pl ius.flt shell.flt" ;
	   count : 1;
      };

};
